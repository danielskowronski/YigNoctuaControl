apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
  labels:
    k8s-app: yignoctuacontrol-exporter
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Values.name }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Values.name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port:   {{ .Values.tcpPort }}
        prometheus.io/path:   "/metrics"
    spec:
      nodeSelector:
        "ynce.skowronski.tech/ync-connected": "true"
      containers:
        - name: ynce
          securityContext:
            privileged: true
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          ports:
            - containerPort: {{ .Values.tcpPort }}
              name: ynce-port
              protocol: TCP
          env:
            - name: SERIAL_PORT
              value: {{ .Values.serialPort }}
            - name: LOGLEVEL
              value: {{ .Values.loglevel | upper }}
            - name: TCP_PORT
              value: {{ .Values.tcpPort }}
            - name: PYTHONUNBUFFERED
              value: "1"  # ensure logs are flushed immediately
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: ync-device
              mountPath: {{ .Values.serialPort }}
      # FIXME: proper livecheck, protect against multiple instances running
      terminationGracePeriodSeconds: 30
      volumes:
        - name: ync-device
          hostPath:
            type: CharDevice
            path: {{ .Values.serialPort }}
